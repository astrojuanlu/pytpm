# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.0
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_tpm', [dirname(__file__)])
        except ImportError:
            import _tpm
            return _tpm
        if fp is not None:
            try:
                _mod = imp.load_module('_tpm', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _tpm = swig_import_helper()
    del swig_import_helper
else:
    import _tpm
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class V3(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, V3, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, V3, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _tpm.V3_type_set
    __swig_getmethods__["type"] = _tpm.V3_type_get
    if _newclass:type = _swig_property(_tpm.V3_type_get, _tpm.V3_type_set)
    __swig_setmethods__["v"] = _tpm.V3_v_set
    __swig_getmethods__["v"] = _tpm.V3_v_get
    if _newclass:v = _swig_property(_tpm.V3_v_get, _tpm.V3_v_set)
    def __init__(self): 
        this = _tpm.new_V3()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tpm.delete_V3
    __del__ = lambda self : None;
V3_swigregister = _tpm.V3_swigregister
V3_swigregister(V3)

class V6(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, V6, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, V6, name)
    __repr__ = _swig_repr
    __swig_setmethods__["v"] = _tpm.V6_v_set
    __swig_getmethods__["v"] = _tpm.V6_v_get
    if _newclass:v = _swig_property(_tpm.V6_v_get, _tpm.V6_v_set)
    def __init__(self): 
        this = _tpm.new_V6()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tpm.delete_V6
    __del__ = lambda self : None;
V6_swigregister = _tpm.V6_swigregister
V6_swigregister(V6)

POS = _tpm.POS
VEL = _tpm.VEL
class M3(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, M3, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, M3, name)
    __repr__ = _swig_repr
    __swig_setmethods__["m"] = _tpm.M3_m_set
    __swig_getmethods__["m"] = _tpm.M3_m_get
    if _newclass:m = _swig_property(_tpm.M3_m_get, _tpm.M3_m_set)
    def __init__(self): 
        this = _tpm.new_M3()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tpm.delete_M3
    __del__ = lambda self : None;
M3_swigregister = _tpm.M3_swigregister
M3_swigregister(M3)

class M6(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, M6, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, M6, name)
    __repr__ = _swig_repr
    __swig_setmethods__["m"] = _tpm.M6_m_set
    __swig_getmethods__["m"] = _tpm.M6_m_get
    if _newclass:m = _swig_property(_tpm.M6_m_get, _tpm.M6_m_set)
    def __init__(self): 
        this = _tpm.new_M6()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tpm.delete_M6
    __del__ = lambda self : None;
M6_swigregister = _tpm.M6_swigregister
M6_swigregister(M6)

M_PI = _tpm.M_PI
CARTESIAN = _tpm.CARTESIAN
SPHERICAL = _tpm.SPHERICAL
POLAR = _tpm.POLAR

def m3I(*args):
  return _tpm.m3I(*args)
m3I = _tpm.m3I

def m3O():
  return _tpm.m3O()
m3O = _tpm.m3O

def m3Rx(*args):
  return _tpm.m3Rx(*args)
m3Rx = _tpm.m3Rx

def m3RxDot(*args):
  return _tpm.m3RxDot(*args)
m3RxDot = _tpm.m3RxDot

def m3Ry(*args):
  return _tpm.m3Ry(*args)
m3Ry = _tpm.m3Ry

def m3RyDot(*args):
  return _tpm.m3RyDot(*args)
m3RyDot = _tpm.m3RyDot

def m3Rz(*args):
  return _tpm.m3Rz(*args)
m3Rz = _tpm.m3Rz

def m3RzDot(*args):
  return _tpm.m3RzDot(*args)
m3RzDot = _tpm.m3RzDot

def m3diff(*args):
  return _tpm.m3diff(*args)
m3diff = _tpm.m3diff

def m3inv(*args):
  return _tpm.m3inv(*args)
m3inv = _tpm.m3inv

def m3m3(*args):
  return _tpm.m3m3(*args)
m3m3 = _tpm.m3m3

def m3scale(*args):
  return _tpm.m3scale(*args)
m3scale = _tpm.m3scale

def m3sum(*args):
  return _tpm.m3sum(*args)
m3sum = _tpm.m3sum

def m6I(*args):
  return _tpm.m6I(*args)
m6I = _tpm.m6I

def m6O():
  return _tpm.m6O()
m6O = _tpm.m6O

def m6Qx(*args):
  return _tpm.m6Qx(*args)
m6Qx = _tpm.m6Qx

def m6Qy(*args):
  return _tpm.m6Qy(*args)
m6Qy = _tpm.m6Qy

def m6Qz(*args):
  return _tpm.m6Qz(*args)
m6Qz = _tpm.m6Qz

def m6diff(*args):
  return _tpm.m6diff(*args)
m6diff = _tpm.m6diff

def m6inv(*args):
  return _tpm.m6inv(*args)
m6inv = _tpm.m6inv

def m6m6(*args):
  return _tpm.m6m6(*args)
m6m6 = _tpm.m6m6

def m6scale(*args):
  return _tpm.m6scale(*args)
m6scale = _tpm.m6scale

def m6sum(*args):
  return _tpm.m6sum(*args)
m6sum = _tpm.m6sum

def m3v3(*args):
  return _tpm.m3v3(*args)
m3v3 = _tpm.m3v3

def m6v3(*args):
  return _tpm.m6v3(*args)
m6v3 = _tpm.m6v3

def v3c2s(*args):
  return _tpm.v3c2s(*args)
v3c2s = _tpm.v3c2s

def v3cross(*args):
  return _tpm.v3cross(*args)
v3cross = _tpm.v3cross

def v3diff(*args):
  return _tpm.v3diff(*args)
v3diff = _tpm.v3diff

def v3init(*args):
  return _tpm.v3init(*args)
v3init = _tpm.v3init

def v3s2c(*args):
  return _tpm.v3s2c(*args)
v3s2c = _tpm.v3s2c

def v3scale(*args):
  return _tpm.v3scale(*args)
v3scale = _tpm.v3scale

def v3sum(*args):
  return _tpm.v3sum(*args)
v3sum = _tpm.v3sum

def v3unit(*args):
  return _tpm.v3unit(*args)
v3unit = _tpm.v3unit

def v62v3(*args):
  return _tpm.v62v3(*args)
v62v3 = _tpm.v62v3

def m3v6(*args):
  return _tpm.m3v6(*args)
m3v6 = _tpm.m3v6

def m6v6(*args):
  return _tpm.m6v6(*args)
m6v6 = _tpm.m6v6

def v32v6(*args):
  return _tpm.v32v6(*args)
v32v6 = _tpm.v32v6

def v6c2s(*args):
  return _tpm.v6c2s(*args)
v6c2s = _tpm.v6c2s

def v6cross(*args):
  return _tpm.v6cross(*args)
v6cross = _tpm.v6cross

def v6diff(*args):
  return _tpm.v6diff(*args)
v6diff = _tpm.v6diff

def v6init(*args):
  return _tpm.v6init(*args)
v6init = _tpm.v6init

def v6s2c(*args):
  return _tpm.v6s2c(*args)
v6s2c = _tpm.v6s2c

def v6scale(*args):
  return _tpm.v6scale(*args)
v6scale = _tpm.v6scale

def v6sum(*args):
  return _tpm.v6sum(*args)
v6sum = _tpm.v6sum

def v6unit(*args):
  return _tpm.v6unit(*args)
v6unit = _tpm.v6unit

def m3fmt(*args):
  return _tpm.m3fmt(*args)
m3fmt = _tpm.m3fmt

def m6fmt(*args):
  return _tpm.m6fmt(*args)
m6fmt = _tpm.m6fmt

def v3fmt(*args):
  return _tpm.v3fmt(*args)
v3fmt = _tpm.v3fmt

def v6fmt(*args):
  return _tpm.v6fmt(*args)
v6fmt = _tpm.v6fmt

def v3alpha(*args):
  return _tpm.v3alpha(*args)
v3alpha = _tpm.v3alpha

def v3delta(*args):
  return _tpm.v3delta(*args)
v3delta = _tpm.v3delta

def v3dot(*args):
  return _tpm.v3dot(*args)
v3dot = _tpm.v3dot

def v3mod(*args):
  return _tpm.v3mod(*args)
v3mod = _tpm.v3mod

def v6alpha(*args):
  return _tpm.v6alpha(*args)
v6alpha = _tpm.v6alpha

def v6delta(*args):
  return _tpm.v6delta(*args)
v6delta = _tpm.v6delta

def v6dot(*args):
  return _tpm.v6dot(*args)
v6dot = _tpm.v6dot

def v6mod(*args):
  return _tpm.v6mod(*args)
v6mod = _tpm.v6mod
REAL = _tpm.REAL
IMAG = _tpm.IMAG
MJD_0 = _tpm.MJD_0
B1950 = _tpm.B1950
J2000 = _tpm.J2000
J1984 = _tpm.J1984
CB = _tpm.CB
CJ = _tpm.CJ
SUNDAY = _tpm.SUNDAY
MONDAY = _tpm.MONDAY
TUESDAY = _tpm.TUESDAY
WEDNESDAY = _tpm.WEDNESDAY
THURSDAY = _tpm.THURSDAY
FRIDAY = _tpm.FRIDAY
SATURDAY = _tpm.SATURDAY
class DMS(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, DMS, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, DMS, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dd"] = _tpm.DMS_dd_set
    __swig_getmethods__["dd"] = _tpm.DMS_dd_get
    if _newclass:dd = _swig_property(_tpm.DMS_dd_get, _tpm.DMS_dd_set)
    __swig_setmethods__["mm"] = _tpm.DMS_mm_set
    __swig_getmethods__["mm"] = _tpm.DMS_mm_get
    if _newclass:mm = _swig_property(_tpm.DMS_mm_get, _tpm.DMS_mm_set)
    __swig_setmethods__["ss"] = _tpm.DMS_ss_set
    __swig_getmethods__["ss"] = _tpm.DMS_ss_get
    if _newclass:ss = _swig_property(_tpm.DMS_ss_get, _tpm.DMS_ss_set)
    def __init__(self): 
        this = _tpm.new_DMS()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tpm.delete_DMS
    __del__ = lambda self : None;
DMS_swigregister = _tpm.DMS_swigregister
DMS_swigregister(DMS)

class HMS(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HMS, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HMS, name)
    __repr__ = _swig_repr
    __swig_setmethods__["hh"] = _tpm.HMS_hh_set
    __swig_getmethods__["hh"] = _tpm.HMS_hh_get
    if _newclass:hh = _swig_property(_tpm.HMS_hh_get, _tpm.HMS_hh_set)
    __swig_setmethods__["mm"] = _tpm.HMS_mm_set
    __swig_getmethods__["mm"] = _tpm.HMS_mm_get
    if _newclass:mm = _swig_property(_tpm.HMS_mm_get, _tpm.HMS_mm_set)
    __swig_setmethods__["ss"] = _tpm.HMS_ss_set
    __swig_getmethods__["ss"] = _tpm.HMS_ss_get
    if _newclass:ss = _swig_property(_tpm.HMS_ss_get, _tpm.HMS_ss_set)
    def __init__(self): 
        this = _tpm.new_HMS()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tpm.delete_HMS
    __del__ = lambda self : None;
HMS_swigregister = _tpm.HMS_swigregister
HMS_swigregister(HMS)

class YMD(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, YMD, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, YMD, name)
    __repr__ = _swig_repr
    __swig_setmethods__["y"] = _tpm.YMD_y_set
    __swig_getmethods__["y"] = _tpm.YMD_y_get
    if _newclass:y = _swig_property(_tpm.YMD_y_get, _tpm.YMD_y_set)
    __swig_setmethods__["m"] = _tpm.YMD_m_set
    __swig_getmethods__["m"] = _tpm.YMD_m_get
    if _newclass:m = _swig_property(_tpm.YMD_m_get, _tpm.YMD_m_set)
    __swig_setmethods__["dd"] = _tpm.YMD_dd_set
    __swig_getmethods__["dd"] = _tpm.YMD_dd_get
    if _newclass:dd = _swig_property(_tpm.YMD_dd_get, _tpm.YMD_dd_set)
    __swig_setmethods__["hms"] = _tpm.YMD_hms_set
    __swig_getmethods__["hms"] = _tpm.YMD_hms_get
    if _newclass:hms = _swig_property(_tpm.YMD_hms_get, _tpm.YMD_hms_set)
    def __init__(self): 
        this = _tpm.new_YMD()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tpm.delete_YMD
    __del__ = lambda self : None;
YMD_swigregister = _tpm.YMD_swigregister
YMD_swigregister(YMD)

class JD(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, JD, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, JD, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dd"] = _tpm.JD_dd_set
    __swig_getmethods__["dd"] = _tpm.JD_dd_get
    if _newclass:dd = _swig_property(_tpm.JD_dd_get, _tpm.JD_dd_set)
    __swig_setmethods__["hms"] = _tpm.JD_hms_set
    __swig_getmethods__["hms"] = _tpm.JD_hms_get
    if _newclass:hms = _swig_property(_tpm.JD_hms_get, _tpm.JD_hms_set)
    def __init__(self): 
        this = _tpm.new_JD()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tpm.delete_JD
    __del__ = lambda self : None;
JD_swigregister = _tpm.JD_swigregister
JD_swigregister(JD)


def d2dms(*args):
  return _tpm.d2dms(*args)
d2dms = _tpm.d2dms

def dms2dms(*args):
  return _tpm.dms2dms(*args)
dms2dms = _tpm.dms2dms

def dms_diff(*args):
  return _tpm.dms_diff(*args)
dms_diff = _tpm.dms_diff

def dms_sum(*args):
  return _tpm.dms_sum(*args)
dms_sum = _tpm.dms_sum

def hms2dms(*args):
  return _tpm.hms2dms(*args)
hms2dms = _tpm.hms2dms

def dms2hms(*args):
  return _tpm.dms2hms(*args)
dms2hms = _tpm.dms2hms

def h2hms(*args):
  return _tpm.h2hms(*args)
h2hms = _tpm.h2hms

def hms2hms(*args):
  return _tpm.hms2hms(*args)
hms2hms = _tpm.hms2hms

def hms_diff(*args):
  return _tpm.hms_diff(*args)
hms_diff = _tpm.hms_diff

def hms_sum(*args):
  return _tpm.hms_sum(*args)
hms_sum = _tpm.hms_sum

def j2jd(*args):
  return _tpm.j2jd(*args)
j2jd = _tpm.j2jd

def jd2jd(*args):
  return _tpm.jd2jd(*args)
jd2jd = _tpm.jd2jd

def jd_diff(*args):
  return _tpm.jd_diff(*args)
jd_diff = _tpm.jd_diff

def jd_now():
  return _tpm.jd_now()
jd_now = _tpm.jd_now

def jd_sum(*args):
  return _tpm.jd_sum(*args)
jd_sum = _tpm.jd_sum

def ymd2jd(*args):
  return _tpm.ymd2jd(*args)
ymd2jd = _tpm.ymd2jd

def jd2ymd(*args):
  return _tpm.jd2ymd(*args)
jd2ymd = _tpm.jd2ymd

def y2ymd(*args):
  return _tpm.y2ymd(*args)
y2ymd = _tpm.y2ymd

def ydd2ymd(*args):
  return _tpm.ydd2ymd(*args)
ydd2ymd = _tpm.ydd2ymd

def ymd2ymd(*args):
  return _tpm.ymd2ymd(*args)
ymd2ymd = _tpm.ymd2ymd

def fmt_alpha(*args):
  return _tpm.fmt_alpha(*args)
fmt_alpha = _tpm.fmt_alpha

def fmt_d(*args):
  return _tpm.fmt_d(*args)
fmt_d = _tpm.fmt_d

def fmt_delta(*args):
  return _tpm.fmt_delta(*args)
fmt_delta = _tpm.fmt_delta

def fmt_h(*args):
  return _tpm.fmt_h(*args)
fmt_h = _tpm.fmt_h

def fmt_j(*args):
  return _tpm.fmt_j(*args)
fmt_j = _tpm.fmt_j

def fmt_ymd(*args):
  return _tpm.fmt_ymd(*args)
fmt_ymd = _tpm.fmt_ymd

def fmt_ymd_raw(*args):
  return _tpm.fmt_ymd_raw(*args)
fmt_ymd_raw = _tpm.fmt_ymd_raw

def d2d(*args):
  return _tpm.d2d(*args)
d2d = _tpm.d2d

def dms2d(*args):
  return _tpm.dms2d(*args)
dms2d = _tpm.dms2d

def gcal2j(*args):
  return _tpm.gcal2j(*args)
gcal2j = _tpm.gcal2j

def h2h(*args):
  return _tpm.h2h(*args)
h2h = _tpm.h2h

def hms2h(*args):
  return _tpm.hms2h(*args)
hms2h = _tpm.hms2h

def jcal2j(*args):
  return _tpm.jcal2j(*args)
jcal2j = _tpm.jcal2j

def jd2j(*args):
  return _tpm.jd2j(*args)
jd2j = _tpm.jd2j

def r2r(*args):
  return _tpm.r2r(*args)
r2r = _tpm.r2r

def utc_now():
  return _tpm.utc_now()
utc_now = _tpm.utc_now

def ymd2dd(*args):
  return _tpm.ymd2dd(*args)
ymd2dd = _tpm.ymd2dd

def ymd2y(*args):
  return _tpm.ymd2y(*args)
ymd2y = _tpm.ymd2y

def j2dow(*args):
  return _tpm.j2dow(*args)
j2dow = _tpm.j2dow

def y2doy(*args):
  return _tpm.y2doy(*args)
y2doy = _tpm.y2doy

def j2gcal(*args):
  return _tpm.j2gcal(*args)
j2gcal = _tpm.j2gcal

def j2jcal(*args):
  return _tpm.j2jcal(*args)
j2jcal = _tpm.j2jcal
IAU_K = _tpm.IAU_K
IAU_DM = _tpm.IAU_DM
IAU_AU = _tpm.IAU_AU
IAU_C = _tpm.IAU_C
IAU_RE = _tpm.IAU_RE
IAU_RM = _tpm.IAU_RM
IAU_F = _tpm.IAU_F
IAU_KAPPA = _tpm.IAU_KAPPA
IAU_W = _tpm.IAU_W
GAL_RA = _tpm.GAL_RA
GAL_DEC = _tpm.GAL_DEC
GAL_LON = _tpm.GAL_LON
PRECESS_NEWCOMB = _tpm.PRECESS_NEWCOMB
PRECESS_ANDOYER = _tpm.PRECESS_ANDOYER
PRECESS_KINOSHITA = _tpm.PRECESS_KINOSHITA
PRECESS_LIESKE = _tpm.PRECESS_LIESKE
PRECESS_FK4 = _tpm.PRECESS_FK4
PRECESS_FK5 = _tpm.PRECESS_FK5
PRECESS_INERTIAL = _tpm.PRECESS_INERTIAL
PRECESS_ROTATING = _tpm.PRECESS_ROTATING
class STAR(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, STAR, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, STAR, name)
    __repr__ = _swig_repr
    __swig_setmethods__["a"] = _tpm.STAR_a_set
    __swig_getmethods__["a"] = _tpm.STAR_a_get
    if _newclass:a = _swig_property(_tpm.STAR_a_get, _tpm.STAR_a_set)
    __swig_setmethods__["d"] = _tpm.STAR_d_set
    __swig_getmethods__["d"] = _tpm.STAR_d_get
    if _newclass:d = _swig_property(_tpm.STAR_d_get, _tpm.STAR_d_set)
    __swig_setmethods__["m"] = _tpm.STAR_m_set
    __swig_getmethods__["m"] = _tpm.STAR_m_get
    if _newclass:m = _swig_property(_tpm.STAR_m_get, _tpm.STAR_m_set)
    def __init__(self): 
        this = _tpm.new_STAR()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tpm.delete_STAR
    __del__ = lambda self : None;
STAR_swigregister = _tpm.STAR_swigregister
STAR_swigregister(STAR)

class CONS(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CONS, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CONS, name)
    __repr__ = _swig_repr
    __swig_setmethods__["a1"] = _tpm.CONS_a1_set
    __swig_getmethods__["a1"] = _tpm.CONS_a1_get
    if _newclass:a1 = _swig_property(_tpm.CONS_a1_get, _tpm.CONS_a1_set)
    __swig_setmethods__["d1"] = _tpm.CONS_d1_set
    __swig_getmethods__["d1"] = _tpm.CONS_d1_get
    if _newclass:d1 = _swig_property(_tpm.CONS_d1_get, _tpm.CONS_d1_set)
    __swig_setmethods__["a2"] = _tpm.CONS_a2_set
    __swig_getmethods__["a2"] = _tpm.CONS_a2_get
    if _newclass:a2 = _swig_property(_tpm.CONS_a2_get, _tpm.CONS_a2_set)
    __swig_setmethods__["d2"] = _tpm.CONS_d2_set
    __swig_getmethods__["d2"] = _tpm.CONS_d2_get
    if _newclass:d2 = _swig_property(_tpm.CONS_d2_get, _tpm.CONS_d2_set)
    def __init__(self): 
        this = _tpm.new_CONS()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _tpm.delete_CONS
    __del__ = lambda self : None;
CONS_swigregister = _tpm.CONS_swigregister
CONS_swigregister(CONS)


def precess_m(*args):
  return _tpm.precess_m(*args)
precess_m = _tpm.precess_m

def aberrate(*args):
  return _tpm.aberrate(*args)
aberrate = _tpm.aberrate

def azel2hadec(*args):
  return _tpm.azel2hadec(*args)
azel2hadec = _tpm.azel2hadec

def ecl2equ(*args):
  return _tpm.ecl2equ(*args)
ecl2equ = _tpm.ecl2equ

def ellab(*args):
  return _tpm.ellab(*args)
ellab = _tpm.ellab

def equ2ecl(*args):
  return _tpm.equ2ecl(*args)
equ2ecl = _tpm.equ2ecl

def equ2gal(*args):
  return _tpm.equ2gal(*args)
equ2gal = _tpm.equ2gal

def eterms(*args):
  return _tpm.eterms(*args)
eterms = _tpm.eterms

def fk425(*args):
  return _tpm.fk425(*args)
fk425 = _tpm.fk425

def fk524(*args):
  return _tpm.fk524(*args)
fk524 = _tpm.fk524

def gal2equ(*args):
  return _tpm.gal2equ(*args)
gal2equ = _tpm.gal2equ

def geod2geoc(*args):
  return _tpm.geod2geoc(*args)
geod2geoc = _tpm.geod2geoc

def hadec2azel(*args):
  return _tpm.hadec2azel(*args)
hadec2azel = _tpm.hadec2azel

def ldeflect(*args):
  return _tpm.ldeflect(*args)
ldeflect = _tpm.ldeflect

def precess(*args):
  return _tpm.precess(*args)
precess = _tpm.precess

def proper_motion(*args):
  return _tpm.proper_motion(*args)
proper_motion = _tpm.proper_motion

def tpm_state(*args):
  return _tpm.tpm_state(*args)
tpm_state = _tpm.tpm_state

def delta_AT(*args):
  return _tpm.delta_AT(*args)
delta_AT = _tpm.delta_AT

def eccentricity(*args):
  return _tpm.eccentricity(*args)
eccentricity = _tpm.eccentricity

def eccentricity_dot(*args):
  return _tpm.eccentricity_dot(*args)
eccentricity_dot = _tpm.eccentricity_dot

def obliquity(*args):
  return _tpm.obliquity(*args)
obliquity = _tpm.obliquity

def obliquity_dot(*args):
  return _tpm.obliquity_dot(*args)
obliquity_dot = _tpm.obliquity_dot

def refract(*args):
  return _tpm.refract(*args)
refract = _tpm.refract

def refraction(*args):
  return _tpm.refraction(*args)
refraction = _tpm.refraction

def solar_perigee(*args):
  return _tpm.solar_perigee(*args)
solar_perigee = _tpm.solar_perigee

def solar_perigee_dot(*args):
  return _tpm.solar_perigee_dot(*args)
solar_perigee_dot = _tpm.solar_perigee_dot

def tdt2tdb(*args):
  return _tpm.tdt2tdb(*args)
tdt2tdb = _tpm.tdt2tdb

def theta(*args):
  return _tpm.theta(*args)
theta = _tpm.theta

def thetadot(*args):
  return _tpm.thetadot(*args)
thetadot = _tpm.thetadot

def ut12gmst(*args):
  return _tpm.ut12gmst(*args)
ut12gmst = _tpm.ut12gmst

def zee(*args):
  return _tpm.zee(*args)
zee = _tpm.zee

def zeedot(*args):
  return _tpm.zeedot(*args)
zeedot = _tpm.zeedot

def tpm(*args):
  return _tpm.tpm(*args)
tpm = _tpm.tpm

def atm(*args):
  return _tpm.atm(*args)
atm = _tpm.atm

def evp(*args):
  return _tpm.evp(*args)
evp = _tpm.evp

def nutations(*args):
  return _tpm.nutations(*args)
nutations = _tpm.nutations

def refco(*args):
  return _tpm.refco(*args)
refco = _tpm.refco

def tpm_data(*args):
  return _tpm.tpm_data(*args)
tpm_data = _tpm.tpm_data
TPM_S00 = _tpm.TPM_S00
TPM_S01 = _tpm.TPM_S01
TPM_S02 = _tpm.TPM_S02
TPM_S03 = _tpm.TPM_S03
TPM_S04 = _tpm.TPM_S04
TPM_S05 = _tpm.TPM_S05
TPM_S06 = _tpm.TPM_S06
TPM_S07 = _tpm.TPM_S07
TPM_S08 = _tpm.TPM_S08
TPM_S09 = _tpm.TPM_S09
TPM_S10 = _tpm.TPM_S10
TPM_S11 = _tpm.TPM_S11
TPM_S12 = _tpm.TPM_S12
TPM_S13 = _tpm.TPM_S13
TPM_S14 = _tpm.TPM_S14
TPM_S15 = _tpm.TPM_S15
TPM_S16 = _tpm.TPM_S16
TPM_S17 = _tpm.TPM_S17
TPM_S18 = _tpm.TPM_S18
TPM_S19 = _tpm.TPM_S19
TPM_S20 = _tpm.TPM_S20
TPM_S21 = _tpm.TPM_S21
N_TPM_STATES = _tpm.N_TPM_STATES
TPM_T00 = _tpm.TPM_T00
TPM_T01 = _tpm.TPM_T01
TPM_T02 = _tpm.TPM_T02
TPM_T03 = _tpm.TPM_T03
TPM_T04 = _tpm.TPM_T04
TPM_T05 = _tpm.TPM_T05
TPM_T06 = _tpm.TPM_T06
TPM_T07 = _tpm.TPM_T07
TPM_T08 = _tpm.TPM_T08
TPM_T09 = _tpm.TPM_T09
TPM_T10 = _tpm.TPM_T10
TPM_T11 = _tpm.TPM_T11
TPM_T12 = _tpm.TPM_T12
TPM_T13 = _tpm.TPM_T13
TPM_T14 = _tpm.TPM_T14
TPM_T15 = _tpm.TPM_T15
N_TPM_TRANS = _tpm.N_TPM_TRANS
TARGET_FK4 = _tpm.TARGET_FK4
TARGET_FK5 = _tpm.TARGET_FK5
TARGET_ECL = _tpm.TARGET_ECL
TARGET_GAL = _tpm.TARGET_GAL
TARGET_APP_HADEC = _tpm.TARGET_APP_HADEC
TARGET_OBS_HADEC = _tpm.TARGET_OBS_HADEC
TARGET_APP_AZEL = _tpm.TARGET_APP_AZEL
TARGET_OBS_AZEL = _tpm.TARGET_OBS_AZEL
TARGET_OBS_WHAM = _tpm.TARGET_OBS_WHAM
TARGET_HADEC = _tpm.TARGET_HADEC
TARGET_TOP_AZEL = _tpm.TARGET_TOP_AZEL
TPM_INIT = _tpm.TPM_INIT
TPM_FAST = _tpm.TPM_FAST
TPM_MEDIUM = _tpm.TPM_MEDIUM
TPM_SLOW = _tpm.TPM_SLOW
TPM_REFRACTION = _tpm.TPM_REFRACTION
TPM_ALL = _tpm.TPM_ALL

def v3DecXf(*args):
  return _tpm.v3DecXf(*args)
v3DecXf = _tpm.v3DecXf

def v3DecYf(*args):
  return _tpm.v3DecYf(*args)
v3DecYf = _tpm.v3DecYf

def v3DecZf(*args):
  return _tpm.v3DecZf(*args)
v3DecZf = _tpm.v3DecZf

def v3DecRf(*args):
  return _tpm.v3DecRf(*args)
v3DecRf = _tpm.v3DecRf

def v3DecAlphaf(*args):
  return _tpm.v3DecAlphaf(*args)
v3DecAlphaf = _tpm.v3DecAlphaf

def v3DecDeltaf(*args):
  return _tpm.v3DecDeltaf(*args)
v3DecDeltaf = _tpm.v3DecDeltaf

def v3DivXf(*args):
  return _tpm.v3DivXf(*args)
v3DivXf = _tpm.v3DivXf

def v3DivYf(*args):
  return _tpm.v3DivYf(*args)
v3DivYf = _tpm.v3DivYf

def v3DivZf(*args):
  return _tpm.v3DivZf(*args)
v3DivZf = _tpm.v3DivZf

def v3DivRf(*args):
  return _tpm.v3DivRf(*args)
v3DivRf = _tpm.v3DivRf

def v3DivAlphaf(*args):
  return _tpm.v3DivAlphaf(*args)
v3DivAlphaf = _tpm.v3DivAlphaf

def v3DivDeltaf(*args):
  return _tpm.v3DivDeltaf(*args)
v3DivDeltaf = _tpm.v3DivDeltaf

def v3GetTypef(*args):
  return _tpm.v3GetTypef(*args)
v3GetTypef = _tpm.v3GetTypef

def v3GetXf(*args):
  return _tpm.v3GetXf(*args)
v3GetXf = _tpm.v3GetXf

def v3GetYf(*args):
  return _tpm.v3GetYf(*args)
v3GetYf = _tpm.v3GetYf

def v3GetZf(*args):
  return _tpm.v3GetZf(*args)
v3GetZf = _tpm.v3GetZf

def v3GetRf(*args):
  return _tpm.v3GetRf(*args)
v3GetRf = _tpm.v3GetRf

def v3GetAlphaf(*args):
  return _tpm.v3GetAlphaf(*args)
v3GetAlphaf = _tpm.v3GetAlphaf

def v3GetDeltaf(*args):
  return _tpm.v3GetDeltaf(*args)
v3GetDeltaf = _tpm.v3GetDeltaf

def v3IncXf(*args):
  return _tpm.v3IncXf(*args)
v3IncXf = _tpm.v3IncXf

def v3IncYf(*args):
  return _tpm.v3IncYf(*args)
v3IncYf = _tpm.v3IncYf

def v3IncZf(*args):
  return _tpm.v3IncZf(*args)
v3IncZf = _tpm.v3IncZf

def v3IncRf(*args):
  return _tpm.v3IncRf(*args)
v3IncRf = _tpm.v3IncRf

def v3IncAlphaf(*args):
  return _tpm.v3IncAlphaf(*args)
v3IncAlphaf = _tpm.v3IncAlphaf

def v3IncDeltaf(*args):
  return _tpm.v3IncDeltaf(*args)
v3IncDeltaf = _tpm.v3IncDeltaf

def v3MulXf(*args):
  return _tpm.v3MulXf(*args)
v3MulXf = _tpm.v3MulXf

def v3MulYf(*args):
  return _tpm.v3MulYf(*args)
v3MulYf = _tpm.v3MulYf

def v3MulZf(*args):
  return _tpm.v3MulZf(*args)
v3MulZf = _tpm.v3MulZf

def v3MulRf(*args):
  return _tpm.v3MulRf(*args)
v3MulRf = _tpm.v3MulRf

def v3MulAlphaf(*args):
  return _tpm.v3MulAlphaf(*args)
v3MulAlphaf = _tpm.v3MulAlphaf

def v3MulDeltaf(*args):
  return _tpm.v3MulDeltaf(*args)
v3MulDeltaf = _tpm.v3MulDeltaf

def v3SetTypef(*args):
  return _tpm.v3SetTypef(*args)
v3SetTypef = _tpm.v3SetTypef

def v3SetXf(*args):
  return _tpm.v3SetXf(*args)
v3SetXf = _tpm.v3SetXf

def v3SetYf(*args):
  return _tpm.v3SetYf(*args)
v3SetYf = _tpm.v3SetYf

def v3SetZf(*args):
  return _tpm.v3SetZf(*args)
v3SetZf = _tpm.v3SetZf

def v3SetRf(*args):
  return _tpm.v3SetRf(*args)
v3SetRf = _tpm.v3SetRf

def v3SetAlphaf(*args):
  return _tpm.v3SetAlphaf(*args)
v3SetAlphaf = _tpm.v3SetAlphaf

def v3SetDeltaf(*args):
  return _tpm.v3SetDeltaf(*args)
v3SetDeltaf = _tpm.v3SetDeltaf

def v3DecRAf(*args):
  return _tpm.v3DecRAf(*args)
v3DecRAf = _tpm.v3DecRAf

def v3DecDecf(*args):
  return _tpm.v3DecDecf(*args)
v3DecDecf = _tpm.v3DecDecf

def v3DivRAf(*args):
  return _tpm.v3DivRAf(*args)
v3DivRAf = _tpm.v3DivRAf

def v3DivDecf(*args):
  return _tpm.v3DivDecf(*args)
v3DivDecf = _tpm.v3DivDecf

def v3GetRAf(*args):
  return _tpm.v3GetRAf(*args)
v3GetRAf = _tpm.v3GetRAf

def v3GetDecf(*args):
  return _tpm.v3GetDecf(*args)
v3GetDecf = _tpm.v3GetDecf

def v3IncRAf(*args):
  return _tpm.v3IncRAf(*args)
v3IncRAf = _tpm.v3IncRAf

def v3IncDecf(*args):
  return _tpm.v3IncDecf(*args)
v3IncDecf = _tpm.v3IncDecf

def v3MulRAf(*args):
  return _tpm.v3MulRAf(*args)
v3MulRAf = _tpm.v3MulRAf

def v3MulDecf(*args):
  return _tpm.v3MulDecf(*args)
v3MulDecf = _tpm.v3MulDecf

def v3SetRAf(*args):
  return _tpm.v3SetRAf(*args)
v3SetRAf = _tpm.v3SetRAf

def v3SetDecf(*args):
  return _tpm.v3SetDecf(*args)
v3SetDecf = _tpm.v3SetDecf

def v6GetPosf(*args):
  return _tpm.v6GetPosf(*args)
v6GetPosf = _tpm.v6GetPosf

def v6GetVelf(*args):
  return _tpm.v6GetVelf(*args)
v6GetVelf = _tpm.v6GetVelf

def v6SetPosf(*args):
  return _tpm.v6SetPosf(*args)
v6SetPosf = _tpm.v6SetPosf

def v6SetVelf(*args):
  return _tpm.v6SetVelf(*args)
v6SetVelf = _tpm.v6SetVelf

def v6DecXf(*args):
  return _tpm.v6DecXf(*args)
v6DecXf = _tpm.v6DecXf

def v6DecYf(*args):
  return _tpm.v6DecYf(*args)
v6DecYf = _tpm.v6DecYf

def v6DecZf(*args):
  return _tpm.v6DecZf(*args)
v6DecZf = _tpm.v6DecZf

def v6DecXDotf(*args):
  return _tpm.v6DecXDotf(*args)
v6DecXDotf = _tpm.v6DecXDotf

def v6DecYDotf(*args):
  return _tpm.v6DecYDotf(*args)
v6DecYDotf = _tpm.v6DecYDotf

def v6DecZDotf(*args):
  return _tpm.v6DecZDotf(*args)
v6DecZDotf = _tpm.v6DecZDotf

def v6DecRf(*args):
  return _tpm.v6DecRf(*args)
v6DecRf = _tpm.v6DecRf

def v6DecAlphaf(*args):
  return _tpm.v6DecAlphaf(*args)
v6DecAlphaf = _tpm.v6DecAlphaf

def v6DecDeltaf(*args):
  return _tpm.v6DecDeltaf(*args)
v6DecDeltaf = _tpm.v6DecDeltaf

def v6DecRDotf(*args):
  return _tpm.v6DecRDotf(*args)
v6DecRDotf = _tpm.v6DecRDotf

def v6DecAlphaDotf(*args):
  return _tpm.v6DecAlphaDotf(*args)
v6DecAlphaDotf = _tpm.v6DecAlphaDotf

def v6DecDeltaDotf(*args):
  return _tpm.v6DecDeltaDotf(*args)
v6DecDeltaDotf = _tpm.v6DecDeltaDotf

def v6DivXf(*args):
  return _tpm.v6DivXf(*args)
v6DivXf = _tpm.v6DivXf

def v6DivYf(*args):
  return _tpm.v6DivYf(*args)
v6DivYf = _tpm.v6DivYf

def v6DivZf(*args):
  return _tpm.v6DivZf(*args)
v6DivZf = _tpm.v6DivZf

def v6DivXDotf(*args):
  return _tpm.v6DivXDotf(*args)
v6DivXDotf = _tpm.v6DivXDotf

def v6DivYDotf(*args):
  return _tpm.v6DivYDotf(*args)
v6DivYDotf = _tpm.v6DivYDotf

def v6DivZDotf(*args):
  return _tpm.v6DivZDotf(*args)
v6DivZDotf = _tpm.v6DivZDotf

def v6DivRf(*args):
  return _tpm.v6DivRf(*args)
v6DivRf = _tpm.v6DivRf

def v6DivAlphaf(*args):
  return _tpm.v6DivAlphaf(*args)
v6DivAlphaf = _tpm.v6DivAlphaf

def v6DivDeltaf(*args):
  return _tpm.v6DivDeltaf(*args)
v6DivDeltaf = _tpm.v6DivDeltaf

def v6DivRDotf(*args):
  return _tpm.v6DivRDotf(*args)
v6DivRDotf = _tpm.v6DivRDotf

def v6DivAlphaDotf(*args):
  return _tpm.v6DivAlphaDotf(*args)
v6DivAlphaDotf = _tpm.v6DivAlphaDotf

def v6DivDeltaDotf(*args):
  return _tpm.v6DivDeltaDotf(*args)
v6DivDeltaDotf = _tpm.v6DivDeltaDotf

def v6GetTypef(*args):
  return _tpm.v6GetTypef(*args)
v6GetTypef = _tpm.v6GetTypef

def v6GetXf(*args):
  return _tpm.v6GetXf(*args)
v6GetXf = _tpm.v6GetXf

def v6GetYf(*args):
  return _tpm.v6GetYf(*args)
v6GetYf = _tpm.v6GetYf

def v6GetZf(*args):
  return _tpm.v6GetZf(*args)
v6GetZf = _tpm.v6GetZf

def v6GetXDotf(*args):
  return _tpm.v6GetXDotf(*args)
v6GetXDotf = _tpm.v6GetXDotf

def v6GetYDotf(*args):
  return _tpm.v6GetYDotf(*args)
v6GetYDotf = _tpm.v6GetYDotf

def v6GetZDotf(*args):
  return _tpm.v6GetZDotf(*args)
v6GetZDotf = _tpm.v6GetZDotf

def v6GetRf(*args):
  return _tpm.v6GetRf(*args)
v6GetRf = _tpm.v6GetRf

def v6GetAlphaf(*args):
  return _tpm.v6GetAlphaf(*args)
v6GetAlphaf = _tpm.v6GetAlphaf

def v6GetDeltaf(*args):
  return _tpm.v6GetDeltaf(*args)
v6GetDeltaf = _tpm.v6GetDeltaf

def v6GetRDotf(*args):
  return _tpm.v6GetRDotf(*args)
v6GetRDotf = _tpm.v6GetRDotf

def v6GetAlphaDotf(*args):
  return _tpm.v6GetAlphaDotf(*args)
v6GetAlphaDotf = _tpm.v6GetAlphaDotf

def v6GetDeltaDotf(*args):
  return _tpm.v6GetDeltaDotf(*args)
v6GetDeltaDotf = _tpm.v6GetDeltaDotf

def v6IncXf(*args):
  return _tpm.v6IncXf(*args)
v6IncXf = _tpm.v6IncXf

def v6IncYf(*args):
  return _tpm.v6IncYf(*args)
v6IncYf = _tpm.v6IncYf

def v6IncZf(*args):
  return _tpm.v6IncZf(*args)
v6IncZf = _tpm.v6IncZf

def v6IncXDotf(*args):
  return _tpm.v6IncXDotf(*args)
v6IncXDotf = _tpm.v6IncXDotf

def v6IncYDotf(*args):
  return _tpm.v6IncYDotf(*args)
v6IncYDotf = _tpm.v6IncYDotf

def v6IncZDotf(*args):
  return _tpm.v6IncZDotf(*args)
v6IncZDotf = _tpm.v6IncZDotf

def v6IncRf(*args):
  return _tpm.v6IncRf(*args)
v6IncRf = _tpm.v6IncRf

def v6IncAlphaf(*args):
  return _tpm.v6IncAlphaf(*args)
v6IncAlphaf = _tpm.v6IncAlphaf

def v6IncDeltaf(*args):
  return _tpm.v6IncDeltaf(*args)
v6IncDeltaf = _tpm.v6IncDeltaf

def v6IncRDotf(*args):
  return _tpm.v6IncRDotf(*args)
v6IncRDotf = _tpm.v6IncRDotf

def v6IncAlphaDotf(*args):
  return _tpm.v6IncAlphaDotf(*args)
v6IncAlphaDotf = _tpm.v6IncAlphaDotf

def v6IncDeltaDotf(*args):
  return _tpm.v6IncDeltaDotf(*args)
v6IncDeltaDotf = _tpm.v6IncDeltaDotf

def v6MulXf(*args):
  return _tpm.v6MulXf(*args)
v6MulXf = _tpm.v6MulXf

def v6MulYf(*args):
  return _tpm.v6MulYf(*args)
v6MulYf = _tpm.v6MulYf

def v6MulZf(*args):
  return _tpm.v6MulZf(*args)
v6MulZf = _tpm.v6MulZf

def v6MulXDotf(*args):
  return _tpm.v6MulXDotf(*args)
v6MulXDotf = _tpm.v6MulXDotf

def v6MulYDotf(*args):
  return _tpm.v6MulYDotf(*args)
v6MulYDotf = _tpm.v6MulYDotf

def v6MulZDotf(*args):
  return _tpm.v6MulZDotf(*args)
v6MulZDotf = _tpm.v6MulZDotf

def v6MulRf(*args):
  return _tpm.v6MulRf(*args)
v6MulRf = _tpm.v6MulRf

def v6MulAlphaf(*args):
  return _tpm.v6MulAlphaf(*args)
v6MulAlphaf = _tpm.v6MulAlphaf

def v6MulDeltaf(*args):
  return _tpm.v6MulDeltaf(*args)
v6MulDeltaf = _tpm.v6MulDeltaf

def v6MulRDotf(*args):
  return _tpm.v6MulRDotf(*args)
v6MulRDotf = _tpm.v6MulRDotf

def v6MulAlphaDotf(*args):
  return _tpm.v6MulAlphaDotf(*args)
v6MulAlphaDotf = _tpm.v6MulAlphaDotf

def v6MulDeltaDotf(*args):
  return _tpm.v6MulDeltaDotf(*args)
v6MulDeltaDotf = _tpm.v6MulDeltaDotf

def v6SetTypef(*args):
  return _tpm.v6SetTypef(*args)
v6SetTypef = _tpm.v6SetTypef

def v6SetXf(*args):
  return _tpm.v6SetXf(*args)
v6SetXf = _tpm.v6SetXf

def v6SetYf(*args):
  return _tpm.v6SetYf(*args)
v6SetYf = _tpm.v6SetYf

def v6SetZf(*args):
  return _tpm.v6SetZf(*args)
v6SetZf = _tpm.v6SetZf

def v6SetXDotf(*args):
  return _tpm.v6SetXDotf(*args)
v6SetXDotf = _tpm.v6SetXDotf

def v6SetYDotf(*args):
  return _tpm.v6SetYDotf(*args)
v6SetYDotf = _tpm.v6SetYDotf

def v6SetZDotf(*args):
  return _tpm.v6SetZDotf(*args)
v6SetZDotf = _tpm.v6SetZDotf

def v6SetRf(*args):
  return _tpm.v6SetRf(*args)
v6SetRf = _tpm.v6SetRf

def v6SetAlphaf(*args):
  return _tpm.v6SetAlphaf(*args)
v6SetAlphaf = _tpm.v6SetAlphaf

def v6SetDeltaf(*args):
  return _tpm.v6SetDeltaf(*args)
v6SetDeltaf = _tpm.v6SetDeltaf

def v6SetRDotf(*args):
  return _tpm.v6SetRDotf(*args)
v6SetRDotf = _tpm.v6SetRDotf

def v6SetAlphaDotf(*args):
  return _tpm.v6SetAlphaDotf(*args)
v6SetAlphaDotf = _tpm.v6SetAlphaDotf

def v6SetDeltaDotf(*args):
  return _tpm.v6SetDeltaDotf(*args)
v6SetDeltaDotf = _tpm.v6SetDeltaDotf

def v6DecRAf(*args):
  return _tpm.v6DecRAf(*args)
v6DecRAf = _tpm.v6DecRAf

def v6DecPMRAf(*args):
  return _tpm.v6DecPMRAf(*args)
v6DecPMRAf = _tpm.v6DecPMRAf

def v6DecDecf(*args):
  return _tpm.v6DecDecf(*args)
v6DecDecf = _tpm.v6DecDecf

def v6DecPMDecf(*args):
  return _tpm.v6DecPMDecf(*args)
v6DecPMDecf = _tpm.v6DecPMDecf

def v6DivRAf(*args):
  return _tpm.v6DivRAf(*args)
v6DivRAf = _tpm.v6DivRAf

def v6DivPMRAf(*args):
  return _tpm.v6DivPMRAf(*args)
v6DivPMRAf = _tpm.v6DivPMRAf

def v6DivDecf(*args):
  return _tpm.v6DivDecf(*args)
v6DivDecf = _tpm.v6DivDecf

def v6DivPMDecf(*args):
  return _tpm.v6DivPMDecf(*args)
v6DivPMDecf = _tpm.v6DivPMDecf

def v6GetRAf(*args):
  return _tpm.v6GetRAf(*args)
v6GetRAf = _tpm.v6GetRAf

def v6GetPMRAf(*args):
  return _tpm.v6GetPMRAf(*args)
v6GetPMRAf = _tpm.v6GetPMRAf

def v6GetDecf(*args):
  return _tpm.v6GetDecf(*args)
v6GetDecf = _tpm.v6GetDecf

def v6GetPMDecf(*args):
  return _tpm.v6GetPMDecf(*args)
v6GetPMDecf = _tpm.v6GetPMDecf

def v6IncRAf(*args):
  return _tpm.v6IncRAf(*args)
v6IncRAf = _tpm.v6IncRAf

def v6IncPMRAf(*args):
  return _tpm.v6IncPMRAf(*args)
v6IncPMRAf = _tpm.v6IncPMRAf

def v6IncDecf(*args):
  return _tpm.v6IncDecf(*args)
v6IncDecf = _tpm.v6IncDecf

def v6IncPMDecf(*args):
  return _tpm.v6IncPMDecf(*args)
v6IncPMDecf = _tpm.v6IncPMDecf

def v6MulRAf(*args):
  return _tpm.v6MulRAf(*args)
v6MulRAf = _tpm.v6MulRAf

def v6MulPMRAf(*args):
  return _tpm.v6MulPMRAf(*args)
v6MulPMRAf = _tpm.v6MulPMRAf

def v6MulDecf(*args):
  return _tpm.v6MulDecf(*args)
v6MulDecf = _tpm.v6MulDecf

def v6MulPMDecf(*args):
  return _tpm.v6MulPMDecf(*args)
v6MulPMDecf = _tpm.v6MulPMDecf

def v6SetRAf(*args):
  return _tpm.v6SetRAf(*args)
v6SetRAf = _tpm.v6SetRAf

def v6SetPMRAf(*args):
  return _tpm.v6SetPMRAf(*args)
v6SetPMRAf = _tpm.v6SetPMRAf

def v6SetDecf(*args):
  return _tpm.v6SetDecf(*args)
v6SetDecf = _tpm.v6SetDecf

def v6SetPMDecf(*args):
  return _tpm.v6SetPMDecf(*args)
v6SetPMDecf = _tpm.v6SetPMDecf

def m3DecXXf(*args):
  return _tpm.m3DecXXf(*args)
m3DecXXf = _tpm.m3DecXXf

def m3DecXYf(*args):
  return _tpm.m3DecXYf(*args)
m3DecXYf = _tpm.m3DecXYf

def m3DecXZf(*args):
  return _tpm.m3DecXZf(*args)
m3DecXZf = _tpm.m3DecXZf

def m3DecYXf(*args):
  return _tpm.m3DecYXf(*args)
m3DecYXf = _tpm.m3DecYXf

def m3DecYYf(*args):
  return _tpm.m3DecYYf(*args)
m3DecYYf = _tpm.m3DecYYf

def m3DecYZf(*args):
  return _tpm.m3DecYZf(*args)
m3DecYZf = _tpm.m3DecYZf

def m3DecZXf(*args):
  return _tpm.m3DecZXf(*args)
m3DecZXf = _tpm.m3DecZXf

def m3DecZYf(*args):
  return _tpm.m3DecZYf(*args)
m3DecZYf = _tpm.m3DecZYf

def m3DecZZf(*args):
  return _tpm.m3DecZZf(*args)
m3DecZZf = _tpm.m3DecZZf

def m3DivXXf(*args):
  return _tpm.m3DivXXf(*args)
m3DivXXf = _tpm.m3DivXXf

def m3DivXYf(*args):
  return _tpm.m3DivXYf(*args)
m3DivXYf = _tpm.m3DivXYf

def m3DivXZf(*args):
  return _tpm.m3DivXZf(*args)
m3DivXZf = _tpm.m3DivXZf

def m3DivYXf(*args):
  return _tpm.m3DivYXf(*args)
m3DivYXf = _tpm.m3DivYXf

def m3DivYYf(*args):
  return _tpm.m3DivYYf(*args)
m3DivYYf = _tpm.m3DivYYf

def m3DivYZf(*args):
  return _tpm.m3DivYZf(*args)
m3DivYZf = _tpm.m3DivYZf

def m3DivZXf(*args):
  return _tpm.m3DivZXf(*args)
m3DivZXf = _tpm.m3DivZXf

def m3DivZYf(*args):
  return _tpm.m3DivZYf(*args)
m3DivZYf = _tpm.m3DivZYf

def m3DivZZf(*args):
  return _tpm.m3DivZZf(*args)
m3DivZZf = _tpm.m3DivZZf

def m3GetXXf(*args):
  return _tpm.m3GetXXf(*args)
m3GetXXf = _tpm.m3GetXXf

def m3GetXYf(*args):
  return _tpm.m3GetXYf(*args)
m3GetXYf = _tpm.m3GetXYf

def m3GetXZf(*args):
  return _tpm.m3GetXZf(*args)
m3GetXZf = _tpm.m3GetXZf

def m3GetYXf(*args):
  return _tpm.m3GetYXf(*args)
m3GetYXf = _tpm.m3GetYXf

def m3GetYYf(*args):
  return _tpm.m3GetYYf(*args)
m3GetYYf = _tpm.m3GetYYf

def m3GetYZf(*args):
  return _tpm.m3GetYZf(*args)
m3GetYZf = _tpm.m3GetYZf

def m3GetZXf(*args):
  return _tpm.m3GetZXf(*args)
m3GetZXf = _tpm.m3GetZXf

def m3GetZYf(*args):
  return _tpm.m3GetZYf(*args)
m3GetZYf = _tpm.m3GetZYf

def m3GetZZf(*args):
  return _tpm.m3GetZZf(*args)
m3GetZZf = _tpm.m3GetZZf

def m3IncXXf(*args):
  return _tpm.m3IncXXf(*args)
m3IncXXf = _tpm.m3IncXXf

def m3IncXYf(*args):
  return _tpm.m3IncXYf(*args)
m3IncXYf = _tpm.m3IncXYf

def m3IncXZf(*args):
  return _tpm.m3IncXZf(*args)
m3IncXZf = _tpm.m3IncXZf

def m3IncYXf(*args):
  return _tpm.m3IncYXf(*args)
m3IncYXf = _tpm.m3IncYXf

def m3IncYYf(*args):
  return _tpm.m3IncYYf(*args)
m3IncYYf = _tpm.m3IncYYf

def m3IncYZf(*args):
  return _tpm.m3IncYZf(*args)
m3IncYZf = _tpm.m3IncYZf

def m3IncZXf(*args):
  return _tpm.m3IncZXf(*args)
m3IncZXf = _tpm.m3IncZXf

def m3IncZYf(*args):
  return _tpm.m3IncZYf(*args)
m3IncZYf = _tpm.m3IncZYf

def m3IncZZf(*args):
  return _tpm.m3IncZZf(*args)
m3IncZZf = _tpm.m3IncZZf

def m3MulXXf(*args):
  return _tpm.m3MulXXf(*args)
m3MulXXf = _tpm.m3MulXXf

def m3MulXYf(*args):
  return _tpm.m3MulXYf(*args)
m3MulXYf = _tpm.m3MulXYf

def m3MulXZf(*args):
  return _tpm.m3MulXZf(*args)
m3MulXZf = _tpm.m3MulXZf

def m3MulYXf(*args):
  return _tpm.m3MulYXf(*args)
m3MulYXf = _tpm.m3MulYXf

def m3MulYYf(*args):
  return _tpm.m3MulYYf(*args)
m3MulYYf = _tpm.m3MulYYf

def m3MulYZf(*args):
  return _tpm.m3MulYZf(*args)
m3MulYZf = _tpm.m3MulYZf

def m3MulZXf(*args):
  return _tpm.m3MulZXf(*args)
m3MulZXf = _tpm.m3MulZXf

def m3MulZYf(*args):
  return _tpm.m3MulZYf(*args)
m3MulZYf = _tpm.m3MulZYf

def m3MulZZf(*args):
  return _tpm.m3MulZZf(*args)
m3MulZZf = _tpm.m3MulZZf

def m3SetXXf(*args):
  return _tpm.m3SetXXf(*args)
m3SetXXf = _tpm.m3SetXXf

def m3SetXYf(*args):
  return _tpm.m3SetXYf(*args)
m3SetXYf = _tpm.m3SetXYf

def m3SetXZf(*args):
  return _tpm.m3SetXZf(*args)
m3SetXZf = _tpm.m3SetXZf

def m3SetYXf(*args):
  return _tpm.m3SetYXf(*args)
m3SetYXf = _tpm.m3SetYXf

def m3SetYYf(*args):
  return _tpm.m3SetYYf(*args)
m3SetYYf = _tpm.m3SetYYf

def m3SetYZf(*args):
  return _tpm.m3SetYZf(*args)
m3SetYZf = _tpm.m3SetYZf

def m3SetZXf(*args):
  return _tpm.m3SetZXf(*args)
m3SetZXf = _tpm.m3SetZXf

def m3SetZYf(*args):
  return _tpm.m3SetZYf(*args)
m3SetZYf = _tpm.m3SetZYf

def m3SetZZf(*args):
  return _tpm.m3SetZZf(*args)
m3SetZZf = _tpm.m3SetZZf

def m6GetPPf(*args):
  return _tpm.m6GetPPf(*args)
m6GetPPf = _tpm.m6GetPPf

def m6GetPVf(*args):
  return _tpm.m6GetPVf(*args)
m6GetPVf = _tpm.m6GetPVf

def m6GetVPf(*args):
  return _tpm.m6GetVPf(*args)
m6GetVPf = _tpm.m6GetVPf

def m6GetVVf(*args):
  return _tpm.m6GetVVf(*args)
m6GetVVf = _tpm.m6GetVVf

def m6SetPPf(*args):
  return _tpm.m6SetPPf(*args)
m6SetPPf = _tpm.m6SetPPf

def m6SetPVf(*args):
  return _tpm.m6SetPVf(*args)
m6SetPVf = _tpm.m6SetPVf

def m6SetVPf(*args):
  return _tpm.m6SetVPf(*args)
m6SetVPf = _tpm.m6SetVPf

def m6SetVVf(*args):
  return _tpm.m6SetVVf(*args)
m6SetVVf = _tpm.m6SetVVf

def convert(*args):
  return _tpm.convert(*args)
convert = _tpm.convert


